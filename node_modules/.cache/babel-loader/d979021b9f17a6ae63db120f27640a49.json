{"ast":null,"code":"var _jsxFileName = \"/home/eike/Projects/d3/map_plot/src/Marks.js\";\nimport { geoEqualEarth, geoPath } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoEqualEarth();\nconst path = geoPath().projection(projection);\nexport const Marks = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"map\",\n  children: data.features.map(d => /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"map-plot\",\n    d: line().x(d => xScale(xValue(d))).y(d => yScale(yValue(d))).curve(curveNatural)(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n_c = Marks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"sources":["/home/eike/Projects/d3/map_plot/src/Marks.js"],"names":["geoEqualEarth","geoPath","projection","path","Marks","data","features","map","d","line","x","xScale","xValue","y","yScale","yValue","curve","curveNatural"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,OAAxB,QAAuC,IAAvC;;AAEA,MAAMC,UAAU,GAAGF,aAAa,EAAhC;AACA,MAAMG,IAAI,GAAGF,OAAO,GAAGC,UAAV,CAAqBA,UAArB,CAAb;AAEA,OAAO,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACjB;AAAG,EAAA,SAAS,EAAC,KAAb;AAAA,YACKA,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkBC,CAAC,iBAChB;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,CAAC,EAAGC,IAAI,GACHC,CADD,CACGF,CAAC,IAAIG,MAAM,CAACC,MAAM,CAACJ,CAAD,CAAP,CADd,EAECK,CAFD,CAEGL,CAAC,IAAIM,MAAM,CAACC,MAAM,CAACP,CAAD,CAAP,CAFd,EAGCQ,KAHD,CAGOC,YAHP,EAGqBZ,IAHrB;AAFR;AAAA;AAAA;AAAA;AAAA,UADH;AADL;AAAA;AAAA;AAAA;AAAA,QADG;KAAMD,K","sourcesContent":["import { geoEqualEarth, geoPath } from 'd3';\n\nconst projection = geoEqualEarth();\nconst path = geoPath().projection(projection);\n\nexport const Marks = ({ data }) => (\n    <g className=\"map\">\n        {data.features.map(d => (\n            <path\n                className=\"map-plot\" \n                d= {line()\n                    .x(d => xScale(xValue(d)))\n                    .y(d => yScale(yValue(d)))\n                    .curve(curveNatural)(data)}\n            />\n        ))}\n    </g>\n);\n\n"]},"metadata":{},"sourceType":"module"}