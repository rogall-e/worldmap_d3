{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\nconst jsonUrl = 'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\nexport const useWorldMap = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  console.log(data);\n  useEffect(() => {\n    json(jsonUrl).then(topojsonData => {\n      const {\n        countries,\n        land\n      } = topojsonData.objects;\n      setData({\n        land: feature(topojsonData, land),\n        interiors: mesh(topojsonData, countries, (a, b) => a !== b)\n      });\n    });\n  }, []);\n  return data;\n};\n\n_s(useWorldMap, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");","map":{"version":3,"sources":["/home/eike/Projects/d3/map_plot/src/useWorldMap.js"],"names":["React","useState","useEffect","json","feature","mesh","jsonUrl","useWorldMap","data","setData","console","log","then","topojsonData","countries","land","objects","interiors","a","b"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,IAArB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,iBAA9B;AAGA,MAAMC,OAAO,GACT,wDADJ;AAGA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,IAAI,CAACG,OAAD,CAAJ,CAAcM,IAAd,CAAmBC,YAAY,IAAI;AAC/B,YAAM;AAAEC,QAAAA,SAAF;AAAaC,QAAAA;AAAb,UAAsBF,YAAY,CAACG,OAAzC;AACAP,MAAAA,OAAO,CAAC;AACJM,QAAAA,IAAI,EAAEX,OAAO,CAACS,YAAD,EAAeE,IAAf,CADT;AAEJE,QAAAA,SAAS,EAAEZ,IAAI,CAACQ,YAAD,EAAcC,SAAd,EAAyB,CAACI,CAAD,EAAIC,CAAJ,KAAUD,CAAC,KAAKC,CAAzC;AAFX,OAAD,CAAP;AAIH,KAND;AAOC,GARI,EAQF,EARE,CAAT;AAUA,SAAOX,IAAP;AACH,CAdM;;GAAMD,W","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { json } from 'd3';\nimport { feature, mesh } from 'topojson-client';\n\n\nconst jsonUrl = \n    'https://unpkg.com/world-atlas@2.0.2/countries-50m.json';\n\nexport const useWorldMap = () => {\n    const [data, setData] = useState(null);\n    console.log(data);\n    useEffect(() => {\n        json(jsonUrl).then(topojsonData => {\n            const { countries, land } = topojsonData.objects;\n            setData({\n                land: feature(topojsonData, land),\n                interiors: mesh(topojsonData,countries, (a, b) => a !== b)\n            });\n        });\n        }, []);\n\n    return data;\n};"]},"metadata":{},"sourceType":"module"}